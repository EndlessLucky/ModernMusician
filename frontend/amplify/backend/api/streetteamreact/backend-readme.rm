This project was bootstrapped with AWS amplify
see https://docs.amplify.aws/cli/graphql-transformer/overview

## Data Types:
Artists - object that contains artist details and connects to contests <br />
ActionPage - page configuration for hosting action page button <br />
ActionPageButton - actions an enduser can take on a specific ActionPage <br />
ActionPageSubscriptions - ties endusers to action pages <br />
Enduser - record of users who can take contest actions* <br />
EnduserAction - ties endusers to actions <br />
ActionType - ENUM of types of actions (initially: follow-on-spotify, join-street-team) <br />
Photos - photo records stored in an S3 bucket. connects to artists (one-to-many) and contests <br /> (one-to-one)

*note - this only stores basic user data, authentication is handled by AWS Cognito User Pools

** datastructure note ** for the MVP we are storing ContestAction data in the Contest records and EnduserAction data on the ContestSubscription. This is not a good long term solution, but works easier for Michael's current frontend strategy

## Making Changes to the data structure
If you want to update the graphql schema, you can edit 
    amplify/backend/api/schema.graphql
and run 
    amplify api push
command. This should update the DynamoDB tables and graphql statements.
*Don't mess with the schema.graphql file under amplify/backend/api/build because it gets regenerated by amplify when the api is updated

Confused about why your not connected to the right backend? Try deleting teh #current-cloud-backend directory and running 
<br />   amplify pull